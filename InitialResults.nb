(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    132237,       2504]
NotebookOptionsPosition[    130085,       2458]
NotebookOutlinePosition[    130481,       2474]
CellTagsIndexPosition[    130438,       2471]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"time", " ", "=", " ", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Pi"}], ")"}]}], ",", "\"\<PlanckConstant\>\""}], 
    "]"}], "/", 
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", "\"\<Electronvolts\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.813531999969503*^9, 3.81353204503994*^9}, {
  3.81353335680447*^9, 3.813533442285433*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b2ead523-a6c6-4274-bf51-dc96033a32d5"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]"}]], 
   RowBox[{
     StyleBox["\"h\"", Italic, StripOnInput -> False], "\[InvisibleSpace]", 
     "\"/\"", "\[InvisibleSpace]", "\"eV\""}], 
   "Planck constants per electronvolt", 
   FractionBox["\"PlanckConstant\"", "\"Electronvolts\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.813532052906941*^9, 3.813533443242141*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"2d4f233b-14f2-463c-8e4f-de1aa938b88f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", "time", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[101]:=",ExpressionUUID->"dc56b0a7-cf7c-40d8-a228-f8501f0e4c9b"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["44173801", 
    RowBox[{"21362355120000000000000", " ", "\[Pi]"}]], "\"s\"", "seconds", 
   "\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.813533445671509*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"c33dd51b-7789-477c-841e-5423c9c7d759"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    FractionBox["44173801", 
     RowBox[{"21362355120000000000000", " ", "\[Pi]"}]], ",", 
    "\"\<Seconds\>\""}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[102]:=",ExpressionUUID->"637ed465-3d09-4196-a510-7b5e75faceaa"],

Cell[BoxData[
 FractionBox["44173801", 
  RowBox[{"21362355120000000000000", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.813533452576436*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"4c33478c-dcc9-4f34-932a-cdd7bcf5e2c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["44173801", 
   RowBox[{"21362355120000000000000", " ", "\[Pi]"}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[103]:=",ExpressionUUID->"9975ad9f-0712-4f1d-a9b5-90c1832c171d"],

Cell[BoxData["6.582119569509065`*^-16"], "Output",
 CellChangeTimes->{3.813533457922595*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"a0293367-4668-48be-a95d-4145c85881c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{"2", " ", "Pi", " ", "0.0000018"}], ",", 
    FractionBox["\"\<Electronvolts\>\"", "\"\<PlanckConstant\>\""]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8135322012277317`*^9, 3.813532249800846*^9}},
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"38ae0f98-63f3-4ace-96c8-819600112b17"],

Cell[BoxData[
 TemplateBox[{"2.734681406181527`*^9", "\"Hz\"", "hertz", "\"Hertz\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.813532067647921*^9, {3.81353220211033*^9, 3.813532250420722*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"b35cbd50-6762-4ab1-b8d5-84cb9bce3396"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</home/ethan/curr_proj/spaceData\>\"", ",", "\"\<Table\>\""}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pUp", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "data", "]"}], "-", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pDown", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "data", "]"}], "-", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pUp", ",", "pDown"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Probability of Emitter vs Time (\[HBar] = eV = 1)\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{
    "{", "\"\<time (\[HBar]/eV ~ 6*\!\(\*SuperscriptBox[\(10\), \(-16\)]\))\>\
\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<e\>\"", ",", "\"\<g\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pUp", ",", "pDown"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Probability of Emitter vs Time (\[HBar] = eV = 1)\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{
    "{", "\"\<time (\[HBar]/eV ~ 6*\!\(\*SuperscriptBox[\(10\), \(-16\)]\))\>\
\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<e\>\"", ",", "\"\<g\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813532407039832*^9, 3.813532558776078*^9}, {
  3.8135326192467947`*^9, 3.813532795141323*^9}, {3.813532866115855*^9, 
  3.813532868608984*^9}, {3.813532909209443*^9, 3.8135331745854883`*^9}, {
  3.8135332143480673`*^9, 3.813533301593193*^9}, {3.8135335735502863`*^9, 
  3.813533669952527*^9}, {3.813533706002596*^9, 3.813533749071702*^9}, {
  3.813533781047901*^9, 3.813533874667378*^9}, {3.813533906034515*^9, 
  3.813533961652835*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"faf743c9-a953-4d37-874a-e423821c388f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
I94=
         "]]}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
gj73RXiHiQX5kAq27d3qfJLYSS/q2+pdKmi6qCw3lFiQF6ngK6HZZpeJC8uy
ubqHVVA5/3FCLLE6GX8vB6ig681prAfEtvwbEqqC2QfueyYR33R62uIRqYIT
jHRKXxI3XFpvXHNdBX3ZsQsziAX5kgr+rNGMzSZeZ3LKJu0Jeb9vU5rziAV5
E3m/5/9bVUrMTyGvflDB9L3fL1cRC/InFdRYZDHUQOzIP8AqUcGt6s3L2onP
+pICy1XBm92BYV3E/PHbskUF67+PLx8gVq2qH5/epYJTE95OFBqmYLN80BG9
v+TzBNnulyCOXaT3I0pCFQXnbRR8ev3yrISSKvYuvSTOIRbkV6q4YCx/cqVg
ZHwdr4q7JTr9xxAL8ixVJLv+Vx3iskPLOt7OUUXB9ytIf9Gb/3AaqOJIzkW8
fOJBkagVqrjjRODF2cQh1upbpNapYthe44/ziPNOpD712qKKb6yE+xYRK/O/
ZuKgiq0L3+ouJV40q/XjGldVnKFu62FKLMjDVNFWSPOuOfHH87MOTfdXxeCm
ElJRKTofU8WU75FS1sSreYd0ZSJUsf6l1YKNxIK8TBVHzu+JU6PvL6i7p4oY
lBdjRzz8xeziuiRVdDlwNs+B2GSwvfXdK1WM3mQuvIc4iIyfM96r4pNVUzX3
EudunB0T81UVf81pMncjFuRrqig39t4xD+IFEg6PD/1SRR124KWDxIK8TRXX
Dhp9Pkz83iHOzvq3KvK3zyPEgvxNFSOLf7H9iGeyf7rri6th/Jf0aQHEnkvJ
hKyghmXJR7eeIn5FtnNZdTXsuLfF6wzx39j3Rw9rq+GY8xoPQomNyPjbOFUN
Z5/of3eOWJDXqaH5oZKyMOLHRy81ZixWQ+/tkbKRxIL8Tg3PW3lOuEw8r7zi
yvU1anjP1GrxVWJBnqeGaQsN1kcTZ5Dx8chONSycwXKLIW5OeSzauE8NhdXz
btwk1m9cZ2vjpYZqcomvbhO7q/Y+e++rhvpCZwvuEo/MLUFquKx7b+t94iFP
UoHC1dC2yUwsjlin6/M4uWtq6F4xZUw8sSAPVMOg71JzE4kT1irmNyWq4Y0P
jauTiAX5oBqmvMxySiaem2QT8DGD8TYy3c3KUcPc+Lt+z4hvbQ2MiP2hhnU3
Tl59QczvSuWr1HAoYmfyS2I9UpaONqohO8go5zXx/lbX6y0dasg/PUsjfq7J
DzgYC/JFdYQDQn/TibU/L5X+T14dR3JOYkHeqI4um9L13xM/mkQaWC3GgvxR
HU+sijH9SKz2I+Vrs4E6Ri09aveJ2FZ0y8SNixiTan0sa5k6Ppmz5XA2cT3/
GNxSHT9NIZM28VSyXG9vZCzIK9WxaozGo1ziS0vIitrLWJBfqmMPq/99HvG4
mNe/Nx1nLMgz1VFOoqQinzjUrEVs9gXG+YfPbr0VpY6C80MKVPgB+h3Gm0sL
FXwT1HHkawPE1yUPObW/YFw7V/PdlnfquKbGY3IpMT/2+ZTNWJCHqqNT8Tr8
SRzBaZ96p4KxIB9Vx2NfZm2qIB7j/l+FH8V4Gf/AqZ9x8LidvM0iGhiRruRe
xd+PVkuYZssy5hx/GGuooiHIH4k38r+OM5ax37SyJyxdxoJ8VQMz7327XUMs
zX+BBYwFeSvj8CZH5ZxVGlgalZBWR8wfh+duYDwcGTnprh1jsmv6cpwZn+ku
Jx2tBlLnQosa+PuRju/MjqOM+cef204xFuS1GihxYi+vib8fCa2LnneVsSC/
ZSzJHyjiGQvyXA0cMxJEkf1I7vM2Kp3xy4VkAvvM+K+zgtLXfMZLo57sXlDO
+FS2dcaDOg38b+8UrXZiQf7LuIuMXwF9jAV5sOb/fbToy8ntMowF+bAmjhwv
EIvzA5UxjKcnx1D3JzF2r+ZHzYxfKJGdYD7jITg98NtIE+2tGtd2EoPb1HX2
FozJ4pXNtWEsyJcZd5r/TXu4m7Egb2bsE2fseuoI41u63yf/PqlJn+eR/mID
f6JkzG/3v11mvP/Fq1mLbzJ+Vm8b/CiOccXOZmO1Z4wFeTVjR/4Nz2IsyK81
kX+be/j7kZbXve9ljAV5NuMt3+6+jGtjfOPvCpZGL+M6vbY9p4cZT7E9n9kj
Ner/duUHomzGgvyb8c95O6YvmchYkIePwrszTl7rIx5pL+cxFuTjjPlf9+k2
Y6zieWTlTmvGm26PvZW/lfH1goxBcGJcI+xolbifsSBPZ2z5OMLxzAnGgnyd
cal8uarjJcaCvJ2x/T5SIR6OwjT+OEkc1JLgn5DMmH9qMCqNMWdlt0HwR8Yb
vC+H9H9jfI20M7tKGX+Y+CmmoJqxIK9nvOqkvOXjbsaC/J4x/xguVHL0/z0y
pisxNibb7S5NxqffTtr7Q4fxV172e6PpjFljXUY/mcvYZpXSwXHIWJD/M84c
JA/gOsaC8wDG5ptOzSt2ZCw4HxiNhWpG34b4+5HEC7Mkb8Yjx2EBjJfyv74U
wph0A9ZDEYy/vDdK2HOdseA8gbHhAfe3xk8YC84XGL/LIwP3B8aC8wbGesea
AgaLGR+IDynfzWX8olx/dkkz40GZgtBlXYxhwcH6p38Yj3wNRWLM/82P084q
MhacVzCes7z1gfN4xoLzC8bpd2ZtNp3DuGF8OufpEsZkN9ynvYKxm7/Yx/Nr
GT/jL6fNjPt/mXntc2Csta1kRqkLY8H5B+P/AcOxvys=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"time (\[HBar]/eV ~ 6*\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-16\\)]\\))\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Probability of Emitter vs Time (\[HBar] = eV = 1)\"", 
       TraditionalForm], PlotRange -> {{0, 7.36648}, {0, 0.999998}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"e\"", "\"g\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.813532527643894*^9, 3.8135325593442287`*^9}, {
   3.813532622773314*^9, 3.8135327131761827`*^9}, {3.813532777979732*^9, 
   3.8135327961891212`*^9}, {3.813532934954237*^9, 3.813532970080003*^9}, {
   3.813533020484289*^9, 3.813533076396777*^9}, 3.813533167449895*^9, {
   3.813533709729031*^9, 3.813533719005354*^9}, 3.813533824800829*^9, 
   3.81353387609606*^9, {3.8135339074167557`*^9, 3.813533962205907*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"1efee2af-4900-4553-884a-e621cdad6b1a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
w1++DpKOlxzuUmXWW4pLg4yyxJLUM3J40cYckzS6NIydbSKZ35HDR+cNu7I0
mHx40I/S5fC92Z61V3SkoWJ8arNtsRzm5G1pWJGzuri8VQ5rui+Z2LtcGrxX
R1m4zsphTv6WhvUNTt9bZJn41YeTSasdpUE/RlTooCETc/K4NJyUMTo5bsfE
zH0vPirulgbPAJGiEE8m3nnHgR6+XxpansSnip9h4qdf2QH3qDT4j92ciIlh
4o7RiAKf/6QhKTHjvlo6Ey/UMlWuDpUG6bzZiJdFTMzJ79JgZR6jbN7KxHd/
ehmm35UGHZt1nnkzTMzJ89Kw/+vbN46y8ljd6GXztZfSEKtz0axmsTzm5Htp
oJhZLPCyk8fzy8MbScPzkmUa/R7yuFKSvYEUSsNr/orSU//JY8ZKtWdWFdKw
qHKDulCMPHb3y5/NqJOGmvwXDbfS5PHj+z4uqm3S8F2MvEixSB6zzW3ajT5p
EK/UDXveIo/ZYXzf1Bi7v4Skt0tm5DGHD1BhpPuFIZJRwDHPG5g1ouzrWv3d
dosVMIcXUOFdqq3rL1sFrCqkWfJakQrKkeXxuzwUsO08gNOmQm9d7s3u0wr4
2mvnhuuLqZDzOSL6eLQCrmgZM51ZSoUz8rXLeNIUsAz13o0Dq6lwequFevg3
Bey2amVHrQMV6srdM2RaFPB5XPTIegsV3r90l340rYA5vIEKaXHv9BfIKGLx
eUC1jwqp7qreWYsUMYc/UEGmOF6BsFXEUf+58M+dooLgz8Guwj2KOGeqJWf/
RSpYLjjj5nRaEfMuuCRTe50KXkpJf+uiFPFaVz3/tXeoUHH2j5lXqiK+Glb6
NesRFZJWp2T3FiriH+8OqWgkU6H4umLC8WZFTOugnox4TYWjFXTG3JQi5vAL
KmwecNW/RFfC56JWX/X9SoWvK0WYUouUMIdnsL9Pse27aBslLDoStsL2N7u9
DTf+Ke5Rwhy+QQVKpOzvp6eUcCBbPdV7qUCMRF1ZEKWEP/zYnnhrlArjlqof
0l8pYdL//2hAua361axQCVsverL1oAgNQlYcJOX8VcJhO9ak/5Gmgf+Vttur
ppQwh4fQ4NvXX75facp4VOx43htNGnwNC/5gb6CMOXyEBq8f/Pvxfa0yPrv/
Y8Btcxpod/4+vmm3MubwEhpQ5f1WVAcp4x7ZnlA/exoEb37/aVukMl48v6E7
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
wGU97vmHIuTNpZ0Wua6H/wdbvf1Q
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxFmnc81d8fx+09rotrVqQoDVnJPKe07DQkUoRIJGWUiqIko1S0lCRSoswm
3vYIZWWTPbL3zu/6+jx+1z8ezwc+n+PzOee8xrmSp5wP2jLQ0dFJMNLRLX9f
W9K8K7nRB13aeC907SHZrBV+gGq5KIWrCiSyUhL1bQJ1niNpubOpdWzixM+j
UHBz3hbLMuGsv5phVREPYtF9/scvfvpQiN+PR4nthVbf0wWyMvl85tSvJyLV
iJ+xmbr8xN8nI/M9C2MLZHKW303VwA0qaUiSvTiekYWPuN5nVDTsTKoXIWW9
LnM5xz/0Fb3Afg9O3OPJMrcwZPfXSUd7957SMhTkzhIYlI1eiM5EYqYs7YaZ
nFmnM31f7riehUgJrJ79NzmyXtQ4HZhPyEbeBqLKf2zYsy6vbnqR1piDAvx2
VxabsWWZnNbtd2bPQ9FMMs+GrFmzFD582SGrko/erNJS5vViyeKZkvbrtClA
D8/u/WoYy0yMrxCN9pLFxVqYsgpuMUoeyypCioyRaRKSTMR4i1FG2IC2ujNj
lrdg6/cysRK0wDG636mQgRh/KSpPGtBv3sCQ9cBtxzddjzIUkzRUnv2APss5
4w0rc8xPJH4uo8GTiT5Lj1nwCFT+QgbxByKcr9FlPXyzs0LjejlK97mxYd3c
Evj8mJkWEapA4bqfdrUxL8H5oY+rpxMqUCevtuu2Vf/gBNluT/XuSrTvoMgZ
A7QI+ttXOyY1ViKjXQcq751dADWz3w/uXqhCFs4pOkav5mHleVQjed+DdiN/
5mB3AD3ZILIavXT7smFIeg5Wns9vZMXCu6HUbRYkKp1Psv78jV61DnUKls7A
yvOqQZV5/JQTG2dgQaQlPnu+Bo1W7dm4L3gaVp5fLdJK87dznp6COiv9uSsb
69CdGwmDXnZTsPI865BsDfnd1uZJSHv3bd/2o/Uo6WuOyFbTSShPk4sUGqpH
IUb52zXqJiCzvrtg4mYDSpEViyJbTED84ovBCrFGxPFYquxS9ziESx4R+Jjc
iPxLC3mVXMfhzh4u9SCdJjQwlj/BwzIOHmdyrc60NqE/Ohn6v8PHwDbY03+v
RzP1/Sj2WyiPwaEk+Y9SPC3ofFyZmnvlKOz83fubLqYFPRHQVZ+9MApysy8X
mtX/oFofi7TvlFFYeV9/UNsPhbYnGSPwXKBb86dSKyrekdN51m4EVt5fK4pF
JBdhgREI3PHC5n1JK5L/OJQ/7TdMvM82JKV8af/A3yG4fPxwoP+pNjQ4FZbQ
fGiIeL9t6CKqYArNHgS765zJtrNt6Na3Fww1ioPE+25Hpoapr6/FDcCR6Jy6
XSHtSGNw2/ZD6wfAWnbxZkpjOzILSPTfHt0PZummwmtlOtA3rdB/I9L9YGyY
+j7kQgd6oxF11S7hL+xv5UVLGR2Ia6fPfSeVv4AunK10Yu9EV38giZa8PtjO
VGjbdLgTcW0sqX12pA+2PFo7qxvZiQIsFR/79PXCug1eQV/7O5Hh6joR9+u9
IPatfs0GlS6UfiSk6qhoL2zEAqVPfLrQqaGw7aTPPcR86kJG9flDV0x6QMim
ZMxNpBsx2ylGBcx0E/OrG/netaoVe9ENzP4+IocSu6n7wSCPyO5uYr51Ix9+
d06XwS4Yf6+Kt+3rQbOHyM2Do13E/OtBqRLGt7Imu6Dt18hp7pYelMeyurB3
pouYj71ISoI/3GG+C7p7/N4MuPaiJJKFr+ZiFzRfblc1z+pFtSm3Op3+dUE1
p1ZZMWcfettreGScyiUvnlruONqH7vCfKCujco7c5PibqD6UH9cfw0zlr9kH
bgsO9aFbFqdCHyx0QdKheNGbqn9REe8Q87W5Lnjbxfph7OZfxCn1YThrugte
eljvtCr/i2LkfN6cmuiCR+xQ/UusH71gmlM8MdIFr+/NXsd2/UhlnE01+HkX
Md/7kYhL+BfWJ13wICUxdtW/fmTs1Gfa/qCLmP8DyFBtylcyuAuu19r9nAsd
QA5xiS7Zfl3EehhAH7ujPv/w7oJz86snazcNopol5QjVS13E+hhEwjq68eTz
XXB8TY1YWs4g4nT/7mhm1wUOMaSi9TxDSC91FnGf6AIrFUfz0GND6HKTb5Xi
4S4wLS4cYogZQg84gt791OkCI3MpH5eRIeSe3WPRrtUFewe9BFvVh1H3tScO
ZxW7QNO74a3h7WH0IyTK7ZxMFyjxbdfIqBxGpuVXFCdEu+CitWcOmXcEnePZ
s2ORuwv8JFjXlyqNIGtmZ7IfXRc8aX54+5bZCPIbUrwRPtYJcc8k/mpdH0HX
+iYznsR2QvrRBP2ZmBH04OX+EtennWBx4I9CbMkI2nrt1b3agE5w5nYMsxwd
QdOWT6LKrnQS63MUvZ8xjDzq2Amh1KtXaYwizdNzqz2Pd8Kb3eSMoFOjSOzg
00J5/U7Yp7n7tbr/KKL3HxIKVO+EY3PlzJMJo+hwF99nH9lOOPvZwv5D1Sh6
mOqguEqkE7xc//6wmx1FuXMOgidZOyFE3mOL5JoxdOOR/eT+yQ7YJvuOv3z3
GPrpmK/R0d4B2j3K7nccxtBIrEqYbHkHsd7HkGFrl7lMRgfYWRmpL6SNoVPB
HgvN7zpgRf/GUKbO+tV6jzogqNGezpl+HCVLrGbx8OmAzdXPulfJjKNt2QVK
p851ALovo1OrP46++fsPFMh1EPvDOCI/yRv7LNYB1pw7eXSfjKPupnmvM6wd
4FZUdp4xcxzZsve86RhrB0r2kklyxzhq00Yxsi3tsLwdnGWfQIvlzBLqxe2g
pi4ivl5uAiVx6VZLpLaDwUyMV8vhCcRVdnVNU0Q7nExTaHvsOYF+q7O9OnOn
Heg+2BTujZxApvF+yhUX24F8dnQjXcEEyp21GKCcaCf2mwn0r1NTQH1/O2zv
4hi+wDeJnNJrPu5UaAedqMfGm1UmkYrJy8My4u3Q96xYpfH4JLrM2mkxzdwO
80dNnoX6TCL/a3EmH4bbgEewY8Hg7SQa3+hecai+jdifJpHE7TMmnTltoHBv
ITtrfBJdOMifbR3fBrv176zzFJlCX+oVQ+55tkHX7u8cG9EUEppvE1W0aYNp
+v1O7TZTyIxD/GyxQRtwUJdzeMAUWvvON/agShuIX7VSOJI4hTRi3QMrJdpg
q+pQKE/NFDLxIxXpc7TBL3mJKxnzU6hc2dg1e7wV2obim90lp9GENX/stuZW
Yr+bRsG5JUGvClqB+UxBVJ/jNJIZ+xBNSmwFYelDzK8fTKNC7evst562wpfV
t/qNv0yj77J2qdM+rVDSyGfI2TKNJGcYVC46tkLzk4jEPMYZVGRtxjlxpBWG
j2zi99o4g2xNLRKuoVag5//ipmI0g07KhQuSNraCQPnuuhHXGfSmti7lA7kV
UovcM18+m0H25c7s8TN/CH2fQQPcuESk9A/U7wrxJXfPoLQ9DV2dXn+gf0m8
u4RzFj2cr2tNOPgHFtPf7b8lP4vyd7w+GCb9ByLSGrcqHZ1FFq782qFzLZB4
wf7+4NVZpFN+aTzzZwux384ihReFoayvW+D3wA0Ty6JZxH9wweuKRwv0vOP5
KjI0i9QFTJP59VvgdhR+WcQ/h4w2XEmskWiBZyfL6H1U55Au5Vzfj8lmiBc3
s1E/OYeGd/Intf9oJvzGHPLLbymXj2yGikcXN36Im0McbXT7k9yaweVeDK9F
+RzK61EuttRrBl99hQuUqTl0vnuJFUs2E/v3PKqPmztwZLoJ3hboqdzZOY+2
OeroR5Y1wTffuqe77ObR7EiBgkx0E5Ri24X5oHnU9WgbpcOzCZxUH7fHJc+j
Sp0br6qMm8B7SmqPTd086jttVHhdqInY7+fRO7XV+T+GGiH6vCZHrdQCEsn5
cXV/QSN82vLDMURnAU1k5vHRRTTCUemFg8h5AcUpbXky7dYIZzr802ZCF1C9
O9/brYaNcCVSUDj52wISEHnoEiHdCMEWUZ5nWxeQzlVJOoOlBogUlWtex7KI
1nBMBSvWNQDmt8qt2rSIpnW2ep1IaoBD5YPrg40X0ctEe/bCgAZCPxbR3TcW
6y7aNICHLmv/0vNFZIjy+I5rNcAd1lCDrzmL6Jp5zYUbwg0gS1egaN+7iB6p
83oPj9WDRsbBR5I8/1Bj0Ijy07J6MPT8M9Og+A/VFRbOeLytJ/TmH/It7/Hi
8a2HixMzGQbe/5DMb5eXuhb1cCvplgRrzD/Up+fmoapSD9Jxn1k+/fiHbIV+
vGgk1cMOu91nnEf+oYqMukub/taB7rqKkg2UJXTI19FLKrcOLNostrarLyGZ
aKirCa8D54i/IeFWS4gr0i5a0bUOeB+Le+jeXkJMV8ySsX4drD38rp4xYQkt
6D7LY1pXR+jXErIc2mvmOV8Le3/mRLjPLKGhxyoMzytrIT4/lk6Ylw4PiR64
7/6uFhazsy4OS9Lh040LD5iu1xL6Roc58z7F7zWpBV5vg5q3++iw5D3zAO3N
tYTe0WETyX3Zw/S1IKnRsOOUEx2+Nlq+dLS2htA/Oqx0OLnLPb4G5h+pWlAe
0mH29GFhgxs1cHPSm2c8hg4zzObLtx2pAe7DBfDrCx1WlZH4oShbA4+SuVzi
S+jw9Xt599G/37CG79DaOy3U+22KFuCs/E3oJR12d/XmuB/zG2bOJu/VZKLH
b01Tqpsv/Sb0kx4HCD6VHtD7DZwb0bupjfQ4+evhp+mrfxN6So9v36zJNxqt
hk7fiLI4I3rcHSxCjs+tBqf2Tq/bp+gxG5biqAyrhim8aZuNGz3Ou/nJNd2u
Gq6/dGnD/vTY2ETvrIdqNbD/+/xgVTg95qu64MjIWU3oLz0+4divad5UBe2m
Qp8rsujx7mucDt4JVYQe0+PanOGGK15VMCEYLRLYTY/3/WSnNzaqIvSZHk/L
vo2eXVMFrFXbru7mYsD3mM93XRmphKO/dIbF1jBgi2ZvhbqsSmjdEhI5I8+A
ZQSiwgTuV8KZoBrj37sZcHW8x3l5q0oY+yvOmHyUAV9o7f+kJF8JV3SsU+86
MODaa/e3itBXQumeqzKnrzFguhTWnM7yCkLfGbBU3O28x5EV0MLAHrDmNQO+
kjgYpHm+gtB7Bnw8Ld+0BFXACIQN1BUxYEtTayd93grYmf7hZGIjA/7p0HSp
oKUcfohOkoKHGHCAjIuy0odyOHRZPecMPSOea1LcH36tHJpqb1zcK8CIh59J
N83rl4Pt9qJ1UjKM2P4C6Ya5eDksy/OcKiP+Lcbm6F37i/ALjFj0/DoRY/df
UDTsNJdykhEL1ahu3iz4i/APjFi9aUJUOvUnNMTPHXe6xYjJRrbKSod+En6C
EX9+ue+WyVgZpLCa3ZB8z4hLF38Uxd8vA43TkQr/MqjjseTcsVm+DAryujsa
yhmx7J3h+OryUjCS2hL2uYMRM/dvmvx2vhTqqMMPnWLEj95ypLeQSgn/wYSP
ht1MQEklkNRU6bBfnAk7pL6v6zEuIfwIE2bic9raNvYD8p5SBWEXE14QGN26
KfQH4U+Y8NcPd83zlX/Ai4nM0TQ7JsxuFcjws7YY/pNXTyY8nyvfL+dZDB+T
9A47BzNhXcMjQ//Ei2EH6QGzfiQT/rCnyUgtqwiyz9V92pDChIe0Rq/0WxeB
Xtlqe+YCJmyhGhHNx1YE4VR70lTHhD+X5G7Jii8k/A0T3lBynDxgXAgJfnma
j/5Rx+uT6R0xXUD4HWa8ZBZxp/VFAYC2caTROmbM4ickl7S7AEjYgV9GhRn/
esNjJzKQD0+X5V2XGZenrCetDc2HtYtTbq3HmfFtm/0cPzTy4b25pkyGMzPe
lnJFRLQ7D5SWBcqHGfuZeKqwhuTBrU/P9VzCmHGPX19Rgloe4ZeY8YHdn6hx
KhceU+VR9jszfqa4tpjpQS7hn5ixy8fboelaufBu2ydSZyszro4N1dcYyIHZ
zb98v48z41cv2lsuPcsBn0BB5ScsLDh2rQSTi04OcP0173YVYcF8tnJF22ez
IWz/sqFjwWrntYqL3mXD6tje/VsRCzbb+YxX3DwbYpnl5jgOsuCQnJzru7iz
Cf/Fgt18rnxVy8qC65Z3V4MHCw68p9zN5ZpF+DEWHMX7ROTDhix4uErsxqUX
LJipciedQToQ/owFP2D7eqlvA4DjJc+YzbkseF7bOOPw40yYrMkyYa9hwY/i
GeROs2aClzIrW3cvC/ZcfbkRX84AtmV5m2fBch5Xtv4aSIf7Yw8dXvKw4rnO
UCalU+mEn2PFTmoHpfbVfwcHg/G7h5RY8Z3X/vRaB78T/o4Vsx67291c+g2u
clwf5TJjxQahZ6WP63wj/B4rNjr5zf114Vcwsf0jmO3Nijt2Dmgn7fsKf3LX
F754wIrrOu1ZfIu/gP3a5f+AFS+6sqRtMPgCo9eTNx79woqDnmuaB1d+hv/k
tYR6fb0Fk6pjn4FRCwWRWlhx646PDlXtn+CwmulSzwgrvqJ+/OkLp0+EX2TD
r5mmbsvNpcHp6U6rVxQ2vMazQ/qpfxrhH9mw2hqbuBThNLiU6pJnpsGGrTS/
Gb+KS4XixAAVBSM2zBSY9dFAKxUO8lb08pxiw22sBjeiq1Kg0UnoWb8rG86a
6Z4udEgBm1ILvaLbbHjaznYkjTEF/qsDn7HhtwyLGvsjkmF59l5NYMN7xbiX
7qolE/6TDdvwFu73r0uCA506lcpVbDi80XW7wqUkwo+y4fuKpkMBIklw6lWN
0vAMG6a7EBAZkp5I+FN2XJsuFi1nlQjqC8rHXq9mx28MYdMl1kTIM6O+EXl2
DJt0zRNOfATDrznfj+9mx7MGd6UeJn2AWiF2J9Wj7LiP3vR+BOsHsHQ3Wk1x
YMfq3589KrVMIPwsO75puKQsmhEPqhUfdv24x47L1qT63BSPJ/wtO27ys9nR
5fUe9O+qx/imsWP8qjhOtTOO8LvseDxqn4a3fhys/y/gsGNhnwKLlM/v4MO+
Nk+BIXac8ibwbtX6d6DyRmbzKB0HnpYIlPn26C1kMZ1rLuPnwFKfNNtsON7C
shzFSXNgkVd7oiauxxL+mANr6u4ZkZh7A1KZ/Ckn9Dmw8hfLag73N4Rf5sAG
dV0KwRMxoLxsIC9w4CGRD+Jv3GII/8yBZ5+kRLnPRsO+HVsuVTzmwKzVUrOf
vKPhidLe/rdxHNjl3GUHW7ZokHwY9PxWBgd+eDFE5vXD1xA3WmlwqpwDTxqX
vtKTfA2KB0SWtDo48C17/4tqSVGwLG9iUxxYaVj0b4h2FHC/vyQ1zsaJp1c1
ZMnWvSL8Nyee9zgawuL8CtbYM/vFb+XE9E7HZ9eyvSL8OCcOSWyI9nodCfLr
H/TaHubEz482Rk7iSKCKkbmmHSeO3TZ7kTv7JSwvP1FPTlzMmmAuzvQSQltU
MqeCOPGAuyR/pF4ErNL0cq56yYlz3ZMXCx69gDfheRKJyZy4t9NEW6T7OUw9
phq2fE7cMmmXb6T6nPDznLiaciZSKiQc2I44TOF+TrzXu4jn4d9nhL/nxE++
1Mi17X8GYuRp0zkSFz7/sehUYdxTwu9z4Zl+Ho0l3qcw4Why7cN2Llzc/3K2
5NITuFbyfGugDheW1L5+tKfzMbDIdvyxO05ldfzX6PBjCPHfeH+3MxdOlGc0
Yip8BCI9zrskfbjwUQHXTYyaj4h8wIVvhqW9YvkUBmM7f53+HcuFXT9W+HAr
hBF5gQs73x1+Q0kKBaYl8+K7ZVyYlbL5SpNCKJEfuLDZKiv7qM8PoeXY98Fd
41xYR1TT3A49BLsv9C/XsHDjXmuHh6+KH8AIZf+BBWFu7O8v0lJn8gAuu92l
r9/EjR0UB2N8u+8DQ3V1cpoWN35BOWXVdek+BCqI2Tww5sYG5XpTX7jvQ9NW
pdozNtz4hufFV4vRIUT+4MalX3dFJ2uFwFB/lqpUADeuMfW68yHtHpFHuHFa
r7SpwdhdoHtn8LzpIzdOiRL4WKR4F4xjTvOm5nDj8vRxjseXg6GBMSEr5Dc3
jk6/jT7nBoH1qXEXp15uzJJaJLOBHAQD1MvrznPj45xuLy1tAsFtzfVqaR4e
fDqgI9b5ewDkiz3d90+CBxu4KaB0wQAiz/DgOTZu+yOud6Cubn3c5708+JLJ
sd3JNf5EvuHBX6IeT1Vo+MPfMKohd+TBbPaf36S8uQ1qD0q893vz4MFvE3k/
+W9D7ggfdQrz4GM9fpFrb/qBvpFpO30MDxa5srMtY+YW1CREPGz5TL3f2i15
bOdvwUmurt3ff/DgFxUfTAP+3oReh03UKcqDgXz73077m0Q+4sFm6fYicn2+
kJ0fIKrPyIstPadIxk6+RF7ixV/7btevmfCBah+ha8wbeXEXtj6z1suHyE+8
eJTFq6ScwwcSmt1ffTXkxa3D34Nkn92A7csBz4oXf7L/qiG3+QbAM0ami65U
ZigA2+zrsH9WJ83oNi928GCnA9PrUHE05PTmZ7z4nvPSIbdObyJv8eIUrtif
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

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"time (\[HBar]/eV ~ 6*\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-16\\)]\\))\"", TraditionalForm], None}, 
     AxesOrigin -> {0, -14.316449136088679`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Probability of Emitter vs Time (\[HBar] = eV = 1)\"", 
       TraditionalForm], 
     PlotRange -> {{
       0, 7.36648}, {-14.316449136088679`, -2.0000019999491555`*^-6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"e\"", "\"g\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.813532527643894*^9, 3.8135325593442287`*^9}, {
   3.813532622773314*^9, 3.8135327131761827`*^9}, {3.813532777979732*^9, 
   3.8135327961891212`*^9}, {3.813532934954237*^9, 3.813532970080003*^9}, {
   3.813533020484289*^9, 3.813533076396777*^9}, 3.813533167449895*^9, {
   3.813533709729031*^9, 3.813533719005354*^9}, 3.813533824800829*^9, 
   3.81353387609606*^9, {3.8135339074167557`*^9, 3.813533962280281*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"0bd641ae-287d-48b0-824e-ff37fb7b1305"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"systemData", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\</home/ethan/curr_proj/mode_and_couplings\>\"", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"histData", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"systemData", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "systemData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineStyle", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Dashed"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineOmega", "=", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.87", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.87", ",", "100"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"histData", ",", 
   RowBox[{"{", ".01", "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "lineStyle", "]"}], ",", "lineOmega"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Histogram of modes as a function of frequency (red line is \
\!\(\*SubscriptBox[\(\[Omega]\), \(0\)]\) = 1.87 (ev/\[HBar])\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Frequency (ev/\[HBar])\>\"", ",", "\"\<Count\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813534688809289*^9, 3.813534831077407*^9}, {
  3.813534861897811*^9, 3.813534867793016*^9}, {3.813534934510496*^9, 
  3.8135349390705338`*^9}, {3.813535068964819*^9, 3.8135350828805027`*^9}, {
  3.813535112884859*^9, 3.813535139247628*^9}, {3.813535189460827*^9, 
  3.813535552056007*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"d06fbfab-12e7-406a-a0b0-bcf4c1f4f562"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
     Opacity[0.]], RectangleBox[{0., 0}, {0.01, 1.},
      RoundingRadius->0], RectangleBox[{0.29, 0}, {0.3, 1.},
      RoundingRadius->0], RectangleBox[{0.51, 0}, {0.52, 1.},
      RoundingRadius->0], RectangleBox[{0.68, 0}, {0.6900000000000001, 1.},
      RoundingRadius->0], RectangleBox[{0.81, 0}, {0.8200000000000001, 1.},
      RoundingRadius->0], RectangleBox[{0.91, 0}, {0.92, 1.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.01, 1.},
      RoundingRadius->0], RectangleBox[{1.07, 0}, {1.08, 1.},
      RoundingRadius->0], 
     RectangleBox[{1.1300000000000001, 0}, {1.1400000000000001, 1.},
      RoundingRadius->0], RectangleBox[{1.19, 0}, {1.2, 1.},
      RoundingRadius->0], RectangleBox[{1.23, 0}, {1.24, 1.},
      RoundingRadius->0], RectangleBox[{1.27, 0}, {1.28, 1.},
      RoundingRadius->0], RectangleBox[{1.31, 0}, {1.32, 1.},
      RoundingRadius->0], RectangleBox[{1.34, 0}, {1.35, 1.},
      RoundingRadius->0], RectangleBox[{1.36, 0}, {1.37, 1.},
      RoundingRadius->0], RectangleBox[{1.3900000000000001, 0}, {1.4, 1.},
      RoundingRadius->0], RectangleBox[{1.41, 0}, {1.42, 1.},
      RoundingRadius->0], RectangleBox[{1.43, 0}, {1.44, 1.},
      RoundingRadius->0], RectangleBox[{1.45, 0}, {1.46, 1.},
      RoundingRadius->0], RectangleBox[{1.47, 0}, {1.48, 1.},
      RoundingRadius->0], RectangleBox[{1.48, 0}, {1.49, 1.},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.51, 1.},
      RoundingRadius->0], RectangleBox[{1.51, 0}, {1.52, 1.},
      RoundingRadius->0], RectangleBox[{1.52, 0}, {1.53, 1.},
      RoundingRadius->0], RectangleBox[{1.54, 0}, {1.55, 1.},
      RoundingRadius->0], RectangleBox[{1.55, 0}, {1.56, 1.},
      RoundingRadius->0], RectangleBox[{1.56, 0}, {1.57, 1.},
      RoundingRadius->0], RectangleBox[{1.57, 0}, {1.58, 1.},
      RoundingRadius->0], RectangleBox[{1.58, 0}, {1.59, 2.},
      RoundingRadius->0], RectangleBox[{1.59, 0}, {1.6, 1.},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.61, 1.},
      RoundingRadius->0], RectangleBox[{1.61, 0}, {1.62, 2.},
      RoundingRadius->0], RectangleBox[{1.62, 0}, {1.6300000000000001, 1.},
      RoundingRadius->0], 
     RectangleBox[{1.6300000000000001, 0}, {1.6400000000000001, 2.},
      RoundingRadius->0], 
     RectangleBox[{1.6400000000000001, 0}, {1.6500000000000001, 2.},
      RoundingRadius->0], RectangleBox[{1.6500000000000001, 0}, {1.66, 2.},
      RoundingRadius->0], RectangleBox[{1.66, 0}, {1.67, 2.},
      RoundingRadius->0], RectangleBox[{1.67, 0}, {1.68, 3.},
      RoundingRadius->0], RectangleBox[{1.68, 0}, {1.69, 3.},
      RoundingRadius->0], RectangleBox[{1.69, 0}, {1.7, 3.},
      RoundingRadius->0], RectangleBox[{1.7, 0}, {1.71, 3.},
      RoundingRadius->0], RectangleBox[{1.71, 0}, {1.72, 4.},
      RoundingRadius->0], RectangleBox[{1.72, 0}, {1.73, 5.},
      RoundingRadius->0], RectangleBox[{1.73, 0}, {1.74, 5.},
      RoundingRadius->0], RectangleBox[{1.74, 0}, {1.75, 6.},
      RoundingRadius->0], RectangleBox[{1.75, 0}, {1.76, 7.},
      RoundingRadius->0], RectangleBox[{1.76, 0}, {1.77, 8.},
      RoundingRadius->0], RectangleBox[{1.77, 0}, {1.78, 10.},
      RoundingRadius->0], RectangleBox[{1.78, 0}, {1.79, 12.},
      RoundingRadius->0], RectangleBox[{1.79, 0}, {1.8, 15.},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {1.81, 19.},
      RoundingRadius->0], RectangleBox[{1.81, 0}, {1.82, 25.},
      RoundingRadius->0], RectangleBox[{1.82, 0}, {1.83, 33.},
      RoundingRadius->0], RectangleBox[{1.83, 0}, {1.84, 45.},
      RoundingRadius->0], RectangleBox[{1.84, 0}, {1.85, 62.},
      RoundingRadius->0], RectangleBox[{1.85, 0}, {1.86, 81.},
      RoundingRadius->0], RectangleBox[{1.86, 0}, {1.87, 97.},
      RoundingRadius->0], RectangleBox[{1.87, 0}, {1.8800000000000001, 97.},
      RoundingRadius->0], 
     RectangleBox[{1.8800000000000001, 0}, {1.8900000000000001, 81.},
      RoundingRadius->0], 
     RectangleBox[{1.8900000000000001, 0}, {1.9000000000000001, 62.},
      RoundingRadius->0], RectangleBox[{1.9000000000000001, 0}, {1.91, 45.},
      RoundingRadius->0], RectangleBox[{1.91, 0}, {1.92, 34.},
      RoundingRadius->0], RectangleBox[{1.92, 0}, {1.93, 25.},
      RoundingRadius->0], RectangleBox[{1.93, 0}, {1.94, 19.},
      RoundingRadius->0], RectangleBox[{1.94, 0}, {1.95, 15.},
      RoundingRadius->0], RectangleBox[{1.95, 0}, {1.96, 13.},
      RoundingRadius->0], RectangleBox[{1.96, 0}, {1.97, 10.},
      RoundingRadius->0], RectangleBox[{1.97, 0}, {1.98, 8.},
      RoundingRadius->0], RectangleBox[{1.98, 0}, {1.99, 7.},
      RoundingRadius->0], RectangleBox[{1.99, 0}, {2.0000000000000004, 7.},
      RoundingRadius->0], 
     RectangleBox[{2.0000000000000004, 0}, {2.0100000000000002, 5.},
      RoundingRadius->0], 
     RectangleBox[{2.0100000000000002, 0}, {2.0200000000000005, 4.},
      RoundingRadius->0], 
     RectangleBox[{2.0200000000000005, 0}, {2.0300000000000002, 4.},
      RoundingRadius->0], RectangleBox[{2.0300000000000002, 0}, {2.04, 4.},
      RoundingRadius->0], RectangleBox[{2.04, 0}, {2.0500000000000003, 3.},
      RoundingRadius->0], RectangleBox[{2.0500000000000003, 0}, {2.06, 3.},
      RoundingRadius->0], RectangleBox[{2.06, 0}, {2.0700000000000003, 3.},
      RoundingRadius->0], RectangleBox[{2.0700000000000003, 0}, {2.08, 2.},
      RoundingRadius->0], RectangleBox[{2.08, 0}, {2.0900000000000003, 2.},
      RoundingRadius->0], RectangleBox[{2.0900000000000003, 0}, {2.1, 2.},
      RoundingRadius->0], RectangleBox[{2.1, 0}, {2.1100000000000003, 2.},
      RoundingRadius->0], RectangleBox[{2.1100000000000003, 0}, {2.12, 2.},
      RoundingRadius->0], RectangleBox[{2.12, 0}, {2.1300000000000003, 1.},
      RoundingRadius->0], RectangleBox[{2.1300000000000003, 0}, {2.14, 2.},
      RoundingRadius->0], RectangleBox[{2.14, 0}, {2.1500000000000004, 1.},
      RoundingRadius->0], RectangleBox[{2.1500000000000004, 0}, {2.16, 1.},
      RoundingRadius->0], RectangleBox[{2.16, 0}, {2.1700000000000004, 2.},
      RoundingRadius->0], RectangleBox[{2.1700000000000004, 0}, {2.18, 1.},
      RoundingRadius->0], RectangleBox[{2.18, 0}, {2.1900000000000004, 1.},
      RoundingRadius->0], RectangleBox[{2.1900000000000004, 0}, {2.2, 1.},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.2100000000000004, 1.},
      RoundingRadius->0], RectangleBox[{2.2100000000000004, 0}, {2.22, 1.},
      RoundingRadius->0], RectangleBox[{2.2300000000000004, 0}, {2.24, 1.},
      RoundingRadius->0], RectangleBox[{2.24, 0}, {2.2500000000000004, 1.},
      RoundingRadius->0], 
     RectangleBox[{2.2500000000000004, 0}, {2.2600000000000002, 1.},
      RoundingRadius->0], 
     RectangleBox[{2.2700000000000005, 0}, {2.2800000000000002, 1.},
      RoundingRadius->0], 
     RectangleBox[{2.2900000000000005, 0}, {2.3000000000000003, 1.},
      RoundingRadius->0], RectangleBox[{2.3000000000000003, 0}, {2.31, 1.},
      RoundingRadius->0], RectangleBox[{2.3200000000000003, 0}, {2.33, 1.},
      RoundingRadius->0], RectangleBox[{2.3400000000000003, 0}, {2.35, 1.},
      RoundingRadius->0], RectangleBox[{2.37, 0}, {2.3800000000000003, 1.},
      RoundingRadius->0], RectangleBox[{2.39, 0}, {2.4000000000000004, 1.},
      RoundingRadius->0], RectangleBox[{2.4200000000000004, 0}, {2.43, 1.},
      RoundingRadius->0], RectangleBox[{2.45, 0}, {2.4600000000000004, 1.},
      RoundingRadius->0], RectangleBox[{2.4800000000000004, 0}, {2.49, 1.},
      RoundingRadius->0], 
     RectangleBox[{2.5200000000000005, 0}, {2.5300000000000002, 1.},
      RoundingRadius->0], RectangleBox[{2.56, 0}, {2.5700000000000003, 1.},
      RoundingRadius->0], RectangleBox[{2.6100000000000003, 0}, {2.62, 1.},
      RoundingRadius->0], RectangleBox[{2.66, 0}, {2.6700000000000004, 1.},
      RoundingRadius->0], RectangleBox[{2.72, 0}, {2.7300000000000004, 1.},
      RoundingRadius->0], 
     RectangleBox[{2.7900000000000005, 0}, {2.8000000000000003, 1.},
      RoundingRadius->0], RectangleBox[{2.8800000000000003, 0}, {2.89, 1.},
      RoundingRadius->0], RectangleBox[{2.9800000000000004, 0}, {2.99, 1.},
      RoundingRadius->0], RectangleBox[{3.0900000000000003, 0}, {3.1, 1.},
      RoundingRadius->0], RectangleBox[{3.2300000000000004, 0}, {3.24, 1.},
      RoundingRadius->0], RectangleBox[{3.4000000000000004, 0}, {3.41, 1.},
      RoundingRadius->0], RectangleBox[{3.6100000000000003, 0}, {3.62, 1.},
      RoundingRadius->0], RectangleBox[{3.87, 0}, {3.8800000000000003, 1.},
      RoundingRadius->0], RectangleBox[{4.21, 0}, {4.220000000000001, 1.},
      RoundingRadius->0], RectangleBox[{4.63, 0}, {4.640000000000001, 1.},
      RoundingRadius->0], RectangleBox[{5.16, 0}, {5.17, 1.},
      RoundingRadius->0], RectangleBox[{5.83, 0}, {5.84, 1.},
      RoundingRadius->0], RectangleBox[{6.62, 0}, {6.630000000000001, 1.},
      RoundingRadius->0], RectangleBox[{7.51, 0}, {7.5200000000000005, 1.},
      RoundingRadius->0], RectangleBox[{8.47, 0}, {8.48, 1.},
      RoundingRadius->0], RectangleBox[{9.46, 0}, {9.47, 1.},
      RoundingRadius->0], RectangleBox[{10.46, 0}, {10.47, 1.},
      RoundingRadius->0], RectangleBox[{11.46, 0}, {11.47, 1.},
      RoundingRadius->0], RectangleBox[{12.46, 0}, {12.47, 1.},
      RoundingRadius->0], RectangleBox[{13.46, 0}, {13.47, 1.},
      RoundingRadius->0], RectangleBox[{14.46, 0}, {14.47, 1.},
      RoundingRadius->0], 
     RectangleBox[{15.459999999999999, 0}, {15.469999999999999, 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Frequency (ev/\[HBar])\"", TraditionalForm], 
    FormBox["\"Count\"", TraditionalForm]},
  AxesOrigin->{-0.041800000000000004`, 0},
  Epilog->{
    Directive[{
      RGBColor[1, 0, 0], 
      Dashing[{Small, Small}]}], 
    LineBox[{{1.87, 0}, {1.87, 100}}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{792., Automatic},
  PlotLabel->FormBox[
   "\"Histogram of modes as a function of frequency (red line is \
\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(0\\)]\\) = 1.87 (ev/\[HBar])\"", 
    TraditionalForm],
  PlotRange->{{0., 2.0900000000000003`}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813534718923123*^9, {3.8135348276454268`*^9, 3.8135348316109343`*^9}, 
   3.813534868536866*^9, {3.8135349361040287`*^9, 3.813534939918942*^9}, {
   3.813535204536455*^9, 3.8135352183919687`*^9}, 3.813535481179698*^9, 
   3.8135355664952297`*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"57d1dd28-c1e2-4c2c-b027-7999f7e0d095"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"systemData", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\</home/ethan/curr_proj/mode_and_couplings\>\"", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineStyle", "=", 
   RowBox[{"{", 
    RowBox[{"Thin", ",", "Red", ",", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fgData", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"systemData", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"systemData", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "systemData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fgData", ",", 
    RowBox[{"{", 
     RowBox[{"1.87", ",", ".141"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"fgData", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<coupling as a function of frequency (red line is \!\(\*SubscriptBox[\
\(\[Omega]\), \(0\)]\) = 1.87 (ev/\[HBar])\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frequency (ev/\[HBar])\>\"", ",", "\"\<Coupling Strength\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "lineStyle", "]"}], ",", "lineOmega"}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813535609254671*^9, 3.813535626362769*^9}, {
  3.813535658306862*^9, 3.8135357068649054`*^9}, {3.813535740819208*^9, 
  3.813535782538206*^9}, {3.8135358139911547`*^9, 3.813535841219533*^9}, {
  3.813537161003234*^9, 3.8135372422864313`*^9}, {3.813537281127376*^9, 
  3.813537286368321*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"35235aed-6156-4ff9-96cd-9a9b8796b580"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
zaQ0961YQ4Mqsy/Viu04r4jzatLQhJ7Zf3fQGzxv7itAv7b5ELqig4QtG7cK
kegNfq217ugg7xNDx9fSIHaMNdKFbngSejcTLes28lu7kwQtezXKP/RLDZH+
x+jaur7PuutoELhuT5loF9aLzOETKWiT1XU+Iej4M9WvJtAcPbZS0+h3m74L
w3oaJL2898yim4Tv9Jen49DxVmt216N3+VTfHULLcaqn7OrB+mplXafCQ4Or
l2snU9D307l6Q9EfpXYrruwlIdVfabQTnTIubO6ODuuDAXleGnyy5PLoRD+w
eNjkj565E+t7pA/nu0NDeR/RCraabo/QN6+b+kptoMG59QUnhPpxHuh2OeiJ
Dsk033YN3fEk5U8dWra+b2QcXS9vlCy4Ed+nsSHZbADne7m/ex3Rr7My1avQ
kkZLb1+gN6wgP8t8x/v64oeja/lokKdtbx6H7jHuqbdEH7p85usSuvxI/P4i
dLBLFMV+EL8fZJnKQm9Ldcz4gG6KyV0+wU+DHLOguX1DJCg87z+eib4Y70RJ
R9fxXLg7i64Uzw3kHsb8Dmvo0xKggXlowzMPdPyIkUgiun4bMdCNHnnhYfQD
zRDq49Aewf24mOqnuokGlrRxsSJ0kq1GZhg6OnelstAo3q8zK2q60LZZFQeu
onsOXeuVF8T1vErQGEMniDFmrqCFtUTVTH7g+6xI5GxBy5zu3v0SrZTzgldC
iAY926y3S//EeS3ps9B59ENfRf4odKK5ntgbtPG+r4x/6Fb6zS18wjRIFe0c
tB7D/J1aFrVDm3xtfNuALndZL/wMPTEnn7NrHPs/twzfys0YHxsjb9xB310u
WUNs/t/5eZzi+IX3DTdRjlz0Q0knDRc0qFhX6K+rgTzGgnArWoom90dPhAar
sgv/qk9gPV/zYOQOmhG05vMDdGdpds84WnVdWhHPJN5HLie0qolivj2ZifJB
x/t2f4hEX56Odh9AT7SPNvaiI01JU/3fJDx7J1GvJEaDdLcGtRL03rCpt4Fo
xoi3jOgfnMesaxs/oXW8bwvdQD9I5/gotQXP7/fDdZPopjLhTg+08H7d1cQU
9heJ8z9q0TrU36ur0SWOnksC4vh9VwVe2Wm8r6pH8Tmgzd5EbIlD51nK7ipD
p79K3LOEfptXbMolQYOf0+3GdjOYT1ui/c3Rf4W7fJvRrzuUigrQN0Vk81Vm
SQgQIUeW0Vo8x4ZS0cJ69tuPSdIg9FCrDNdfEliTH11T0Wby+j4X0Dw1hZV/
0KpR+790oRse2G3SlKLBbrr8Aa1/JNzOs/OJR2dVPX74CL1mjfDQEFp1r5mi
0Bz2c/VJuspWrI/nM19eRSeOHO8MQVd4ytLH0euGH9p3oDeFeHKazZPgaXRh
eec2rI+HNla9Qh/3WZPqhz4UFHNTZgHz+c+I4Qe0bfQVuzi0RMgFLglpPL8/
DseX0W+Pi34+jzaJ7TU8s0jC3yzj3Br0vefulh/Rg1JBEQLbaXB4xaOAA0sk
2JeIBzigLYK2P8tC64YnBJajA9KcyPXLJJQqGMeu2UGDYcU1Fr7oXLeGx5bo
G+7JHwbRml4O34vQFIEc6jEGCYavUreyy2C9OPR2tgxduOW7lyl6142beVtJ
rJd1qR0P0JZz172i0GKgb7SAXiWpR19Ap/matBnI4vmudTWzY+L9vVrhwn10
l3aQUwt68q2BxBT678DW5AMs3L8cie+Hd+LzfAcGstHSQ+Jlt9FRu020NrAx
4adrZcZPtH0DT60f+leGa4aaHPaDq4+sfqA1TbJLo9G+h+oFTNmZIF3T8f07
2sFv+mcVOv1h4DYVeRqwHW/skuNgAkWH98pNdOOF4fFEdA0wf3Wj8ygDmzk5
mdDWWOuprECD668JR3d0X3w7fxD6bcZQWze6+OuT5jY0n9Y2B70VTLDXa0qV
U6TBwIsSwedoZdX74QHoXc3KY1Irmdg/MmK/oLWZqn3RaHMnkyc7lPB94tzm
ltEnVspPXkan3nTb7bSKCbbtOVof0XkPO+Pb0C4rDpdvU8b4iDEV1lrNhFHD
S3q+aJM4/9on6G7e9/+a0ecHl25JcDFh/ljJa6ldGB9h7lFR6FsPH+d7o4+f
ufpoGd3jq/WkCe2/5+s/J24mfC+YbJf8jwY743nOdqA//VQQ90Ybruxi113D
BJHwoBtN6Nyl3vrn6OcpnmuldtOA+aG2VHotEyz7Ap96o60+qHxJQHd/lfdv
Rjto9G/mXIf7U77suHUPrt/KNdoD/Sfcy8cXvdctfNcg+i6vWH7L/z4v+sFm
sp4JMl99mdJ7sZ647WGrQTsr8fn6oX+xiSvv5mFCq/55wS9oka/06Ew0m5RY
l6wKDTztEsX5eXE/Q9JqA9FehuEDQeiIHcFf29DqemOtf9HRkfQ1Svsw/1Sc
GGc2MIFre45jMLpF9A2tHa1xePl3D7riv/wfehsxHiRG7+/dj/E80PWwAv1y
9N/FSLTJ+w15Cnz4/CcVPsPozS2rulLRHVFvs9RVMR7WXz6ykZ8JMcF5S7fQ
vrOyI0Ho9PtzVybRwypfq+fQzT1H5HUO4PzSd6DVSYAJ6se3r0pD3z8usa0X
Xb3mP54F9DNd3UcnNjFh5R7mEeODeD5j3p516BlSOq8Afanay1tVkAlk2SG1
FWo0aKvlKnuITmkcIa3QJvYMFSkhXH/p86kyNF+YyN/baELxqACfOsZjivLM
GmEmsLNpObmiW0K4/7uKvqsMU/Vo+Xc+T/6huf/05Etp0KDv3FEvl81MWM6t
SryCFhWnXf6ObmKFlLWjDcTc62giTHDo6Vy35xC+v5mTaQvawMkyKRr9w2qL
rLYoE26LPaeNox9ftz9SiZaujDDSAeyf9Ztz9ogxoeF02JVMtOPkZuNC9I1g
+iAT3XL9iPa2LUyYXci+akHB+B/wDrqLzp8TpZejr6okrhMQZ8KTra5OmzRx
v6OCv0ei5eK0n3uggzrlOFdJYH1pMlf/hC6ddfMIRO/tsGApHqbB1wLVXYvo
++psrAh0a4O3hqck5ssqUm0cLSQoeHcSPf6Zu0zvCPYjl1UGjlJM+NHUfz4X
rVN84OgQ2rPygPMqLRq4DmelWW/FerKmNesMOltZTa8LfaPOVfwtum1gXpvY
xgStrNouaW0anPZrvfMFzSOQ0nkDXVH1Qeu4NH5f46noCFq6eFC3GV2zqjVD
W4cGd1MFsvW3M2GfeK1rDvqTytmTDejbbPr+q3Vx3vYfcNHewYTfLOVWR/T4
6M3OWnSbgZbHe/RPwiX7sAwTymZN6Qp62O8Ub394g969oBQajT5hIkhoyjIh
Ry+XNYVOPMgOb9AdH2NrTPVp8GfOOUxzJxOeXn7zqRT9TM1lXw1ahrJRXsQA
49tFTPeIHBP27Dz5xR89kHm3sg69wty34Tu64jVXso48xv8mg7U6R/F8PEO6
GtHmLcWpBehtRw4GH1VgwhHZyOu8hjTwuGd4pwU9z1FX5oXO7vkpZKKI3w86
BF3oMUsNjjb0XrGRzZRj2M8D/MxPKjHBMClLLwdt9rxdvB9dLO7YvM6IBuxJ
Yab2yljvdLbleKIdh5sWxtDRAo1tXejKpB7e87uYIMhjaHP4OA3WTDPuzKGz
NHIpBWitoAvJ/v8xYSe0+vGdwHlL8/q6lbuZ0Kn/aaMf+lHk5flIdPTBu5zD
6A5K/slNezA/UvebHDPG/l5ruz8VHfWqgFmKFuSbj5bZywSFHAa3lAmu5+Pb
00/QqftVL0agnU3lnqmpMKFK0UVzDp3xIvhGPfqSQo77KVPMtyn1b8b7mBDf
xGD7gH7RWJ7bi47ODJ5TNcP3X+lAOu3H+Dc7afwA7ejyvH0OfSE1iY+Piuf7
RVT1hip+bmOlFohOVeGT5DuA/aGwpXkCbVi7KS4dHfx1Y+NJAufZP7mRygeZ
EOB1Qukd+lawkUA1uju4jE2Vhv2mPGHncTUmKDr4UHLRRftWtfSjr4zV/hak
0+CV2gHOC+pMSDjbui4U7ZBV955Dgwlh74fuzqMrGVo7bqMT7u+672iO8XXf
Qkj2EBO2iJEbu9BcZUVpL9FSmjHLR0/ifOM49vo4YHy27bKoQud/e3llGJ0T
orz7PwvM94PdrZcoTLAY67mWjRbm4Gji1WRCRVL0UWFLGkDXH9sctLVaamwk
+nuTU7LGYSYMpDmZsFthvJ046PkNbVtnEu+NVnX+b9btCBNMJ6uNJ9CjL6RF
VmsxobJUNP60NcZD8p+xdHTBjm9mnWhBZU97NW0mSL62uXvChgZuMYkRbWgi
cc/ZRnTfB51THjpMMLP98IJiSwNuUZ8fPLpYbyOLbr1A6/VJSj5En6FZLe4+
RYPMT0fWG+hh/nbbjz1EU4RHH/9En1CgOsicxnyxF1h/U58JbmdrL2SiYc3g
NlkDJqh90F8vbof3Eymn+Ua0UVvowRR0eeb7MOejTEg22LosaE+D7cFKvesM
mfCRXnviFnq8t3a2GH2sSESD7wwNrrBefzQ9hr8f0/smFt1+x85zAW03VT/A
64D1p3tq4L4R1qPopLsx6L3xz0W0jjPh6hrBv7xnaVBjtGrbL7Q4B+9ELFov
BBjxJ5jwVZ4azOeI51f6Nk/NmAlzF968uYWuDF8pP4Lu49mTJeSE+cDyDI4x
YUJkfoz8XXRcWHTFQVMmTHrUWko4Y7yodzePokuPvFHNRvvO/KxKMGPCcMX1
NztdaLDscTxBk4rna8m1WIxmTy02nEIbPjX/vs8V79e3n06mEZhfbsFXqtDb
RnkunaAxIelaRrOOG/bT8oBpdjoT4oyavn5Ed869M3+GLqiSuWV+Dtd/7c2z
s+YYj85DvMPodHPKSrGTTBis2q3v7o759lne6DNaT9zk8DJ6psozPtQC35c7
hAw9T4P4Qr5vhyxx/3VE/TddoMEXLp7N82i+lWdrs9A5dt6nHlthvnM1fNnt
gfX8ztknztb4fp8zHtWgv27gXrfDBufJRgfC1BP77USU1yCaOBP9cRhdp6/y
O80Wz8cmRdTHiwYx3gZXrE/hvNWxSWPNRRoYKW/fKn4a57GI2/tS0f1dO4f6
0DaLZWv2eGP+vXtXk27HhGv3tlc2ond4BNXZ2eN6hOKO2fhgvSkf/CVzBu1Y
9mYOLSR3TX0SrSFmKxrjS4NwnVUVTx2YUHjdykr2Eg3kamUc/c4y4eBIZHgN
Wv1rvoGWI+bvq7YHVpcxH8/bnOFxwnrzW6lkEd2fK1fZie5l3CpJ9MP4GmSY
5DhjPT0qULD3Cs4H+9oVvVxwfbS6u1/Rf8venzjiivH1rzHc0x/z/91CNb8b
zgcJJpcFAmig754QOIIu9kp1K0Ur5PcmlJ/D+rM0d9Y8EO8z9fLsUe5Y74ef
upJojbqhptPn8fu3DwZmXsXzfeC/cOACzi82zEy9azQIbguK4PNgQlHj1e4/
6JbwhLAJ9OF2Y4Xk6zQ4ttVqvsET5wubDXc0g2jwPjq7M9sL+6Wp8/YJdHyl
pkrQxf/F+5ZvSTfwvElJXjtvJhx//K9QK5gGyT5HXLV8sF46fX40g5a9VW0s
44v1seN+X0YIDeq93tStvcQEqrX5YZNQGsw5RryfRqcG8Pdy3sTPz3o7dl7G
zw9MlpSizSJnsmr88L7hurnROQyffzv0+qMrTPBR7ZWUDMd8dvrGneKP/fBU
7Js2dFPKLbgZgP3lxf2i6AjMx7+JO30DmTASGTShG0mD6JWNH5yuYv6tbQ3k
iKLB66eKu62uYf2tVHGrQnd9/Glpcp0Jm37bvfCLpoFUsYqZfhDOQ8rKTgdj
sH41uoofvsGE1/X+15bQmVTOGvVgJnjtMlxdGYv368UI7QMhTDh5/xErII4G
ZY5lxftDMR68m92PxGP8iFJXq97EfjQybsmdgOdLmpoeDGPCUSu75k/oXTtr
Uw6F4/pk82vv3ML7TvaXYa0IjFemnp79bTzPba2qxyKxPySO2exKxPnyk1oq
LYoJS1qGG5jomc0ZYvbROJ8nH7P5kIT375Dqlx4xTPjAGDFJTaYBb7RPUFAs
9jsHuenzd7BfXvrolxiH/XDZkKKdgr+n//dhYTzWr7f3dUTv0iAw46BEbQLG
r0vEmll0S6VEd88t3K/xrPjmezRQdjQYW7iN8xbt9kjufazXnJEmQkkYP3lK
a4JT8b4b+V1CNZkJgYG2q+3TaLCx0OukxR0mqDA0hrXSsb9+vrf2WgoTHiaR
uTIZON/TBtTz7+J5sy+Zr8ukgUTOv/mv9zA/uZ6yz6KNXet02FOxX1xvyenO
ogF/h8Oe/9Iw3rQ3G9dn0+BCr1yjXTrer6Vucj19gP03OIH3TgYTPg+ofsvI
ocGS7kmBz5l4PyA8q+Nzcf3u57+vzcb64l7wMTgPzy+U7br+AybwGvnz+OXT
4FSHO3t4DhPvgeU3PApoIDZp4/Ihlwnynwg110Ks79KPm/jzmbC4L0jN8SHW
c+NAJauC/+XPnWiHR5ivDorp+YVMCDWWOXS2CO8/SlaKiw/xvvf4t6lzMQ1i
BecGjxZh/ouNdro/psEgx46WjGJcT8bBLp8n2J/32jGWHuN9RdbY5noJDVZp
nPOjleD6lxs8Y55ifnGZmZc9xfpt7rs17RnOg7/ds0We4zzG4+v95DnGa6+b
y7VS7G8Son71pRjvtw1f/SpjQsb1f2p9ZThP/7XJN3/BhFU/euoWyjF/qabQ
VMEE4/BxKcEKGjSvUYihVOJ8LOFvs+8lnv/w0fwXr3BeqD0Ybl6J96tvnqn7
qnG+XM1fHPgK619OfWDZa8z3tZrdeVU4j35oslavYcK9rGNi36ppYG7kcext
LRM2pG+8uuINDfa85bc2eYv1TKRcYH8NDWSu+mQN1TOhZeD1T9daGixUfNt1
qRH3c5pjbU4d1v+5rs3875kwxlccPvgW5ze3Qo8nTUzY6Gfis7WBBgcejR43
+8AEpeTOgTONmO96hfXLLXg/nYhvf/gO9+tZykTuJ7x/cu92nX+P/eZwbzv9
C95XMr4UazfjevV2pPG04nm+WH6a9IEG1Xbl5u++YX9iZoZPtuB8OuMkEdbO
hOfyu3R0P9Fgw6N8LqNOJvRnXl3M/kwDJY8gJeFuJtwR+VW26iu+76EHBT96
MF68j9x2bcV5lWqfVNmH94M3fQ/avuF+36/hTRrAfDRNYmq104D2n5eyD94s
o0Q/PyvroMHBHSN8VsN4XxIM6FPqwniOgXa9Uaxnf7fGF3Rj/FReSDn4E+eF
n92jcr14fynd67d7HO8Dj079Le7D92fnv7NrAvvVS56vBwYw39LdBVR+M2HN
8+G7jd9xHrGP4qFMYf5yxztaDmG9vJmYbzzDBIk2H9N/wxi/ydlczn+Z0MMq
9kkYxfniSePxsDmct+P5p/f9xPgUFMguXsB5y1azp38M/14qQ753iQma49lE
9C88j8R76/lInKfi/AMOT2L9oh33MGJhPRIc9WD8pkFPmGxQPDsLWO49ppVT
2L+3NTr3cbKgaEL/8PUZGqyb5qbuXsUCsmKtrdFfGpSIbHSP5mKB9Lvlj5Jz
2J+3mv2YWcOCk2uXni/OY/1xz5+0Wc+CNrm5fZ2LuD8uZk+/8bLgTNaib/Uy
rk+J38WMjwUEdXfWQxL365OCfo8AC/7Ekb3pLBpwnroa5CbEgsG8WZN77HRQ
CL9lzCXCgmxyViGNkw62s7kTD8VYwPvwv+T8lXSIsquJsZBgwdo6Ss3L1XTY
/bTeR2ArC4Kkpbu+cdPhd1LwULs0C3yZFhsW1tJhmPqZP0eGBbHc/xK38tCh
yy7+aKAcC7i9kjOoG+jwkbf3o50iC14k3zsTx0eH/N1cP013scA0RFCkTYAO
wRxve4/vwe/bT8xvE6LDUQFVkraPBcdf/zzgt5kOh1L5b7seYIFPe4tYjygd
XHiezkWps+D5gHu/jjgddnCrelcCC+QuvKl5KUkHuZE854XDLEhc+Y9bbRsd
HCo3KB3WYYF/XexS3XY6SMplbEnRZ8HXiLAec1k6vPv07Q7bMRZcsrZeWpSj
w+faO6u8T7Dggq5KxgNFOjycPde0ZMoCkfeLkla76HCzMsk0hsaCawtXmiX3
0OFyxWGevRYseGyQtDilQoerXC/OjVmz4LWpIXuLKh3c+WImik+z4I3nFJSr
0eGPdAfnTQcWpOWe2PT4EB36xixVPJxZMJPSM/xckw5LHN9WuZ9jwfatXze9
16JD3MI2zkAPfH+dC/yTunRYUXqnItObBX4bpI9JHKVDypd9tV2XWWCp+Wrf
KSM8n7G/5TKBLHivVKj31JgOOYb8h8KDWPBycQ+bIJUOm+iOyxw3cf8sn/WH
0elQ9K4sPT6SBQqmg+d4Lemg7cwzciCOBYsD/Gq5NnQo8NoWunibBQ064e3G
dnRI3Pb62JcUFvTOvenlPUsHRrci19s0FqRkN0x+d6bDd4/C6C/ZLPjyKb6o
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
649biw==
     "]]}, 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[
    None], FaceForm[Hue[0., 0., 0.]], 
    ArrowBox[{{6.547622208474015, 0.14244140083157114`}, {2.257592217668207, 
     0.1410839660521344}}]}, InsetBox[
    StyleBox[Cell["Cavity Coupling (one mode)",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "42dc1e38-788a-43e5-ad87-18b03479e5e5"],
     FontSize->15,
     FontSlant->"Italic",
     Background->GrayLevel[1.]], {7.101285586137446, 0.14266763996648438}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None],
     FaceForm[Hue[0., 0., 0.]], 
    ArrowBox[{{5.36344564857032, 0.026305314151441966`}, {2.288805759028479, 
     0.006622509849610429}}]}, InsetBox[
    StyleBox[Cell["Weak Reservoir Couplings (many modes, linear in frequency)",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "77a69b9d-e322-4c76-bcab-983c8244525f"],
     FontSize->15,
     FontSlant->"Italic",
     Background->GrayLevel[1.]], {5.430943215589872, 0.025460377020818964}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Frequency (ev/\[HBar])\"", TraditionalForm], 
    FormBox["\"Coupling Strength\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    Directive[{
      Thickness[Tiny], 
      RGBColor[1, 0, 0], 
      Dashing[{Small, Small}]}], 
    LineBox[{{1.87, 0}, {1.87, 100}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{27.914939, 88.847656}, {5.697833, 18.75}},
  ImageSize->{930., Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"coupling as a function of frequency (red line is \\!\\(\\*SubscriptBox[\
\\(\[Omega]\\), \\(0\\)]\\) = 1.87 (ev/\[HBar])\"", TraditionalForm],
  PlotRange->{{-0.322114288577197, 
   15.783600140282651`}, {-0.003032258064516129, 0.1485806451612903}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.8135373250693607`*^9, 3.813537444794512*^9}, {
  3.813537488387042*^9, 
  3.8135375115124187`*^9}},ExpressionUUID->"95781ad2-02a3-4c58-88aa-\
20b3f95248ac"]
}, Open  ]]
},
WindowSize->{1437., 796.5},
WindowMargins->{{1.5, Automatic}, {1.5, Automatic}},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dff61111-85c8-414d-b2b0-c4756121d76c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 531, 14, 32, "Input",ExpressionUUID->"b2ead523-a6c6-4274-bf51-dc96033a32d5"],
Cell[1114, 38, 495, 12, 57, "Output",ExpressionUUID->"2d4f233b-14f2-463c-8e4f-de1aa938b88f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1646, 55, 172, 4, 29, "Input",ExpressionUUID->"dc56b0a7-cf7c-40d8-a228-f8501f0e4c9b"],
Cell[1821, 61, 303, 8, 58, "Output",ExpressionUUID->"c33dd51b-7789-477c-841e-5423c9c7d759"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2161, 74, 334, 9, 46, "Input",ExpressionUUID->"637ed465-3d09-4196-a510-7b5e75faceaa"],
Cell[2498, 85, 229, 5, 49, "Output",ExpressionUUID->"4c33478c-dcc9-4f34-932a-cdd7bcf5e2c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2764, 95, 236, 6, 46, "Input",ExpressionUUID->"9975ad9f-0712-4f1d-a9b5-90c1832c171d"],
Cell[3003, 103, 175, 3, 33, "Output",ExpressionUUID->"a0293367-4668-48be-a95d-4145c85881c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3215, 111, 402, 9, 46, "Input",ExpressionUUID->"38ae0f98-63f3-4ace-96c8-819600112b17"],
Cell[3620, 122, 279, 5, 40, "Output",ExpressionUUID->"b35cbd50-6762-4ab1-b8d5-84cb9bce3396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3936, 132, 3036, 82, 139, "Input",ExpressionUUID->"faf743c9-a953-4d37-874a-e423821c388f"],
Cell[6975, 216, 41811, 748, 355, "Output",ExpressionUUID->"1efee2af-4900-4553-884a-e621cdad6b1a"],
Cell[48789, 966, 43124, 773, 324, "Output",ExpressionUUID->"0bd641ae-287d-48b0-824e-ff37fb7b1305"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91950, 1744, 1975, 54, 133, "Input",ExpressionUUID->"d06fbfab-12e7-406a-a0b0-bcf4c1f4f562"],
Cell[93928, 1800, 11523, 194, 478, "Output",ExpressionUUID->"57d1dd28-c1e2-4c2c-b027-7999f7e0d095"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105488, 1999, 2096, 58, 133, "Input",ExpressionUUID->"35235aed-6156-4ff9-96cd-9a9b8796b580"],
Cell[107587, 2059, 22482, 396, 554, InheritFromParent,ExpressionUUID->"95781ad2-02a3-4c58-88aa-20b3f95248ac"]
}, Open  ]]
}
]
*)

